#!/bin/bash
#set -x

if [ -z "$1" ]
then
  echo
  echo -e "\t   1  ARGUMENT ARE REQUIRED"
  echo -e "\t  MACHINE"
  echo
  exit 1
fi

MACHINE=$1

if [ "$MACHINE" = "TS35" ]
then
  cd ts_3_5
  export OE_QMAKE_INCDIR_QT=$STAGING_INCDIR"/qtopia"
  export QMAKESPEC=$QMAKESPEC
  export OE_QMAKE_LDFLAGS="-Wl,-O1 -Wl,--hash-style=gnu"
  export OE_QMAKE_CXXFLAGS="-fexpensive-optimizations -fomit-frame-pointer -frename-registers -O2 -ggdb2 -fpermissive -fvisibility-inlines-hidden"
  export OE_QMAKE_CFLAGS="-fexpensive-optimizations -fomit-frame-pointer -frename-registers -O2 -ggdb2"
  export OE_QMAKE_LIBDIR_QT=$STAGING_LIBDIR
  export OE_QMAKE_LINK=$CROSS_COMPILE"g++ -march=armv5te -mtune=arm926ej-s -mthumb-interwork -mno-thumb --sysroot="$STAGING_DIR_HOST
  export OE_QMAKE_CC=$CROSS_COMPILE"gcc -march=armv5te -mtune=arm926ej-s -mthumb-interwork -mno-thumb --sysroot="$STAGING_DIR_HOST
  export OE_QMAKE_CXX=$CROSS_COMPILE"g++ -march=armv5te -mtune=arm926ej-s -mthumb-interwork -mno-thumb --sysroot="$STAGING_DIR_HOST
  export OE_QMAKE_MOC=$QTDIR"usr/bin/moc4"
  export OE_QMAKE_AR=$CROSS_COMPILE"ar"
  export OE_QMAKE_QMAKE=$QTDIR"usr/bin/qmake2"
  export OE_QMAKE_STRIP="echo"
  $OE_QMAKE_QMAKE CONFIG+=release TEST_ARCH=arm QT_LIBINFIX="E"
  make clean || exit 1
  cd ..
  exit 0
fi

if [ "$MACHINE" = "MMT" ]
then
  cd ts_10
  export QTDIR=$QTDIR
  export QMAKESPEC=$QMAKESPEC
  export PATH=$PATH:$CROSS_PATH
  $QTDIR/bin/qmake CONFIG+=release
  make clean || exit 1
  cd ..
  exit 0
fi
exit 1
